#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_virtualbox - Install or remove Oracle VirtualBox
######                  https://www.virtualbox.org/
######
###### (c) 2018-2019 Volker Wiegand <volker.wiegand@cvw.de>
######               This file is part of "CVW Config"
######               See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="Oracle VirtualBox"
_slug="virtualbox"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i   Install or remove $_name
		    or: $_prog -g   Generate config template
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function virtualbox_generate
{
	cat <<-EOF
	    <virtualbox active="true">
	    </virtualbox>

	EOF
	exit 0
}


function virtualbox_install
{
	cvw_say -h "Installing $_name"
	local _rpm

	for _rpm in binutils \
			qt \
			gcc \
			make \
			patch \
			libgomp \
			glibc-headers \
			glibc-devel \
			kernel-headers \
			kernel-devel \
			dkms ; do
		cvw_rpm -i $_rpm
	done

	cvw_yum -a virtualbox
	cvw_rpm -i VirtualBox-6.0

	/usr/lib/virtualbox/vboxdrv.sh setup

	# usermod -a -G vboxusers user_name

	cvw_say -o "$_slug"
}


function virtualbox_remove
{
	if cvw_rpm -c VirtualBox-6.0 ; then
		cvw_say -h "Removing $_name"

		cvw_rpm -e VirtualBox-6.0

		cvw_say -o "$_slug:remove"
	fi
}


while getopts ":ig" opt ; do
	case $opt in
		i)
			if cvw_xml -a software/$_slug ; then
				virtualbox_install
			else
				virtualbox_remove
			fi
			exit 0
		;;

		g)
			virtualbox_generate
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

