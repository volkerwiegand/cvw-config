#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_wordpress - Install or remove WordPress
######                 https://wordpress.org/
######                 https://codex.wordpress.org/Installing_WordPress
######                 https://de.wordpress.org/
######
###### (c) 2016 Volker Wiegand <volker.wiegand@cvw.de>
######          This file is part of "CVW Config"
######          See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="Wordpress"
_slug="wordpress"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i   Install or remove $_name
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function wordpress_install
{
	cvw_say -h "Installing $_name"
	cvw_xml -a software/mysql || cvw_say -f "$_prog: requires mysql"
	cvw_xml -a software/php   || cvw_say -f "$_prog: requires php"
	local _root=$(cvw_xml -r system/app_root)/$_slug
	local _uri=$(cvw_xml -r software/$_slug/uri)
	local _pass=$(cvw_xml -r software/$_slug/password)
	[[ -s /tmp/cvw/error ]] && exit 1
	local _html
	[[ $_uri == "/" ]] && _html="/var/www/html" || _html="$_root$_uri"
	local _conf _file _subdir

	cvw_mysql -c $_slug $_slug $_pass utf8_general_ci
	cvw_backup -m $_slug -u $_slug -p $_pass $_slug \
			$_html/wp-content/plugins \
			$_html/wp-content/themes \
                        $_html/wp-content/uploads

	cvw_unpack -i $_slug $_html index.php
	mkdir -p $_html/wp-content/uploads
	chown -R root:root $_html
	chown -R ftp:ftp $_html/wp-content
	chown -R apache:ftp $_html/wp-content/uploads

	_file=$_html/wp-config-sample.php
	[[ -f $_file ]] && mv -f $_file $_file.bak_VW

	if [[ -s /var/local/backup/$_slug/last/mysql && \
	      -d /var/local/backup/$_slug/last/dirs  && \
	      -x /usr/local/bin/bkup.$_slug          && \
	      -x /usr/local/bin/rstr.$_slug ]] ; then
		cvw_say -s "updating / syncing backup"
		/usr/local/bin/bkup.$_slug
	fi

	_file="$_html/wp-config.php"
	cat >$_file.tmp_VW <<-EOF
		<?php
		define('DB_NAME',     '$_slug');
		define('DB_USER',     '$_slug');
		define('DB_PASSWORD', '$_pass');
		define('DB_HOST',     'localhost');
		define('DB_CHARSET',  'utf8');
		define('DB_COLLATE',  'utf8_general_ci');
		\$table_prefix = 'wp_';

		define('AUTH_KEY',         '$(cvw_xml -r software/$_slug/key_1)');
		define('SECURE_AUTH_KEY',  '$(cvw_xml -r software/$_slug/key_2)');
		define('LOGGED_IN_KEY',    '$(cvw_xml -r software/$_slug/key_3)');
		define('NONCE_KEY',        '$(cvw_xml -r software/$_slug/key_4)');
		define('AUTH_SALT',        '$(cvw_xml -r software/$_slug/key_5)');
		define('SECURE_AUTH_SALT', '$(cvw_xml -r software/$_slug/key_6)');
		define('LOGGED_IN_SALT',   '$(cvw_xml -r software/$_slug/key_7)');
		define('NONCE_SALT',       '$(cvw_xml -r software/$_slug/key_8)');

		define('WPLANG',          '$(cvw_xml -r system/language)');
		define('FORCE_SSL_ADMIN', true);
		define('WP_DEBUG',        false);
		# define('WP_ALLOW_REPAIR', true);

		if ( !defined('ABSPATH') )
		    define('ABSPATH', dirname(__FILE__) . '/');
		require_once(ABSPATH . 'wp-settings.php');
	EOF
	[[ -s /tmp/cvw/error ]] && exit 1
	cvw_file -v $_file $(cvw_php -s)

	_file="$_html/.htaccess"
	cat >$_file.tmp_VW <<-EOF
		# BEGIN WordPress
		<IfModule mod_rewrite.c>
		   RewriteEngine On
		   RewriteBase ${_uri%/}/
		   RewriteRule ^index\\.php\$ - [L]
		   RewriteCond %{REQUEST_FILENAME} !-f
		   RewriteCond %{REQUEST_FILENAME} !-d
		   RewriteRule . /index.php [L]
		</IfModule>
		# END WordPress
	EOF
	[[ -s /tmp/cvw/error ]] && exit 1
	cvw_file -v $_file $(cvw_php -s)

	if cvw_xml -a software/nginx ; then
		cvw_nginx -p software/$_slug
	fi

	if cvw_xml -a software/apache ; then
		cvw_apache -p $_slug
	fi

	cvw_url -a "$_name" $_uri

	cvw_say -o "$_slug"
}


function wordpress_remove
{
	local _web=$(cvw_xml -r system/web/server)
	local _root=$(cvw_xml -r system/app_root)/$_slug
	local _uri=$(cvw_xml -r software/$_slug/uri)
	local _html
	[[ $_uri == "/" ]] && _html="/var/www/html" || _html="$_root$_uri"

	cvw_backup -z $_slug
	cvw_mysql -z $_slug $_slug
	if [[ -d $_root ]] ; then
		cvw_say -h "Removing $_name"
		if [[ $_web == "apache" && $_uri == "/" ]] ; then
			rm -rf /var/www/html
			mkdir -p /var/www/html
		fi
		rm -rf $_root
		cvw_say -o "$_slug:remove"
	fi

	rm -f /tmp/cvw/error
}


while getopts ":i" opt ; do
	case $opt in
		i)
			if cvw_xml -a software/$_slug ; then
				wordpress_install
			else
				wordpress_remove
			fi
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

