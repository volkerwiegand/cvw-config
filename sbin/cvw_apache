#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_apache - Install or disable Apache httpd
######              http://httpd.apache.org/
######
###### (c) 2016-2017 Volker Wiegand <volker.wiegand@cvw.de>
######               This file is part of "CVW Config"
######               See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="Apache httpd"
_slug="apache"


_CONF_FILE="/etc/httpd/conf.d/vhost.conf"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i        Install or disable $_name
		    or: $_prog -c        Return config file path
		    or: $_prog -e file   Enable conf.d/file.conf
		    or: $_prog -p slug   Add standard PHP block
		    or: $_prog -x        Execute and cleanup
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function apache_add_php
{
	local _base=$1
	local _root=$(cvw_xml -r system/app_root)/$_base
	local _uri=$(cvw_xml -r software/$_base/uri)
	local _conf=$(cvw_apache -c)
	[[ -s /tmp/cvw/error ]] && exit 1
	local _rails

	if [[ -r /tmp/cvw/apache.block ]] ; then
		cat /tmp/cvw/apache.block >>$_conf.tmp_VW
		rm -f /tmp/cvw/apache.block
		return
	fi

	if [[ $_uri == "/" ]] ; then
		cat >>$_conf.tmp_VW <<-EOF

		   <Directory __DOC_ROOT__>
		EOF
		echo "$_root/app" >/tmp/cvw/apache.doc.root
	else
		cat >>$_conf.tmp_VW <<-EOF

		   Alias $_uri $_root/app
		   <Directory $_root/app>
		EOF
	fi

	if cvw_xml -a software/rails ; then
		_rails=$(cvw_xml -r software/rails/server)
		if [[ $_rails == "passenger" ]] ; then
			cat >>$_conf.tmp_VW <<-EOF
			      <IfModule mod_passenger.c>
			         PassengerEnabled off
			      </IfModule>
			EOF
		fi
	fi

	cat >>$_conf.tmp_VW <<-EOF
	      AllowOverride all
	      Require all granted
	   </Directory>
	EOF
}


function apache_initial
{
	cvw_say -h "Installing $_name"
	cvw_xml -a software/certbot || cvw_say -f "$_prog: requires certbot"
	local _fqdn=$(cvw_xml -r host/fqdn)
	local _loglvl=$(cvw_xml -r software/$_slug/loglevel)
	local _port=$(cvw_xml -r software/$_slug/port)
	local _ssl_port=$(cvw_xml -r software/$_slug/ssl_port)
	[[ -s /tmp/cvw/error ]] && exit 1
	local _domain=${_fqdn#*.}
	local _hstnam=${_fqdn%%.*}
	local _cert="/etc/letsencrypt/live/$_fqdn"
	[[ -s $_cert/cert.pem ]] || cvw_say -f "missing SSL cert"
	local _file _alias _redir _container _base _uri _cport

	cvw_rpm -i httpd
	cvw_rpm -i httpd-devel
	cvw_service -s httpd
	cvw_apache -e welcome
	cvw_apache -e autoindex
	cvw_apache -e userdir

	echo "/var/www/html" >/tmp/cvw/apache.doc.root

	_file="/etc/httpd/conf/httpd.conf"
	cvw_file -e $_file "s/^\(Listen\).*/\1 $_port/" httpd
	cvw_file -e $_file "s/^\(ServerAdmin\).*/\1 webmaster@$_domain/" httpd
	cvw_file -e $_file "s/^#ServerName/ServerName/" httpd
	cvw_file -e $_file "s/^\(ServerName\).*/\1 $_fqdn:$_port/" httpd

	cvw_rpm -i mod_ssl
	_file="/etc/httpd/conf.d/ssl.conf"
	cvw_file -b $_file
	cat >$_file.tmp_VW <<-EOF
		#
		# Common SSL settings
		#
		# ssl_module loaded in conf.modules.d/00-ssl.conf
		Listen $_ssl_port https

		$(grep "^SSLPassPhraseDialog" $_file.bak_VW | sort)
		$(grep "^SSLSessionCache"     $_file.bak_VW | sort)
		$(grep "^SSLMutex"            $_file.bak_VW | sort)
		$(grep "^SSLRandomSeed"       $_file.bak_VW | sort)
		$(grep "^SSLCryptoDevice"     $_file.bak_VW | sort)
	EOF
	cvw_file -v $_file httpd
	cvw_apache -e ssl

	if cvw_xml -a software/php ; then
		if cvw_xml -t software/$_slug/php ; then
			cvw_apache -e php
		fi
	fi
	cvw_rpm -i mod_wsgi
	cvw_rpm -i mod_perl  && cvw_apache -e perl
	cvw_rpm -i mod_fcgid && cvw_apache -e fcgid

	_file="/tmp/cvw/apache.names"
	echo "   ServerName       $_fqdn" >$_file
	if [[ $_hstnam == "www" ]] ; then
		echo "   ServerAlias      $_domain" >>$_file
	fi
	for _alias in $(cvw_xml -l software/$_slug/alias | sort) ; do
		echo "   ServerAlias      $_alias" >>$_file
		if [[ $_alias =~ ^www\. ]] ; then
			echo "   ServerAlias      ${_alias#*.}" >>$_file
		fi
	done

	if [[ $_ssl_port -eq 443 ]] ; then
		_redir=""
	else
		_redir=":$_ssl_port"
	fi

	cat >$_CONF_FILE.tmp_VW <<-EOF
		<VirtualHost *:$_port>
		$(cat /tmp/cvw/apache.names)
		   UseCanonicalName Off
		   ErrorLog         logs/error_log
		   TransferLog      logs/transfer_log
		   LogLevel         $_loglvl
		   RewriteEngine    On
		   RewriteCond      %{HTTPS} off
		   RewriteRule      ^ https://%{HTTP_HOST}${_redir}%{REQUEST_URI}
		</VirtualHost>

		<VirtualHost *:$_ssl_port>
		$(cat /tmp/cvw/apache.names)
		   UseCanonicalName  Off
		   ErrorLog          logs/ssl_error_log
		   TransferLog       logs/ssl_transfer_log
		   LogLevel          $_loglvl
		   DocumentRoot      __DOC_ROOT__
		   ProxyPreserveHost On
		   ProxyRequests     off

		   SSLEngine             on
		   SSLCertificateFile    $_cert/cert.pem
		   SSLCertificateKeyFile $_cert/privkey.pem
		   SSLCACertificateFile  $_cert/chain.pem
		   $(grep "^SSLProtocol"    /etc/httpd/conf.d/ssl.conf.bak_VW)
		   $(grep "^SSLCipherSuite" /etc/httpd/conf.d/ssl.conf.bak_VW)

		   <Files ~ "\\.(cgi|shtml|phtml|php3?)\$">
		      SSLOptions +StdEnvVars
		   </Files>
		   <Directory "/var/www/cgi-bin">
		      SSLOptions +StdEnvVars
		   </Directory>

		   <Directory "/var/www/html">
		      AllowOverride all
		   </Directory>

		   BrowserMatch "MSIE [2-5]" \\
		      nokeepalive ssl-unclean-shutdown \\
		      downgrade-1.0 force-response-1.0
	EOF

	if cvw_xml -a software/docker ; then
		for _container in $(cvw_xml -i software/docker/container) ; do
			_base="software/docker/container:$_container"
			cvw_xml -t $_base/$_slug || continue
			cvw_say -s "container: $_container"
			_uri=$(cvw_xml -r $_base/uri)
			_cport=$(cvw_xml -r $_base/port)
			[[ -s /tmp/cvw/error ]] && exit 1

			if [[ $_uri == "/" ]] ; then
				cat >>$_CONF_FILE.tmp_VW <<-EOF

					   ProxyPass        / http://localhost:$_cport/
					   ProxyPassReverse / http://localhost:$_cport/
				EOF
			else
				cvw_rpm -i mod_proxy_html

				cat >>$_CONF_FILE.tmp_VW <<-EOF

					   ProxyPass ${_uri%/}/ http://localhost:$_cport/
					   ProxyHTMLURLMap      http://localhost $_uri
					   <Location ${_uri%/}/>
					      ProxyPassReverse /
					      ProxyHTMLEnable  On
					      ProxyHTMLURLMap  /     ${_uri%/}/
					      RequestHeader    unset Accept-Encoding
					   </Location>
				EOF
			fi
		done
	fi

	[[ -s /tmp/cvw/error ]] && exit 1

	cvw_say -o "$_slug:initial"
}


function apache_finish
{
	cvw_say -h "Finishing $_name"
	local _fqdn=$(cvw_xml -r host/fqdn)
	local _port=$(cvw_xml -r software/$_slug/port)
	local _ssl_port=$(cvw_xml -r software/$_slug/ssl_port)
	[[ -s /tmp/cvw/error ]] && exit 1
	local _root=$(cat /tmp/cvw/apache.doc.root)
	local _file _uri

	echo "</VirtualHost>" >>$_CONF_FILE.tmp_VW

	sed -i -e "s#__DOC_ROOT__#$_root#g" $_CONF_FILE.tmp_VW
	mkdir -p $_root
	cvw_file -v $_CONF_FILE httpd
	cvw_apache -e $_CONF_FILE

	find /etc/httpd/conf.d -maxdepth 1 -name "*.conf" | while read _file ; do
		grep -q -s "$_file" /tmp/cvw/apache.enabled && continue
		cvw_say -s "disabling $_file (not in list)"
		mv $_file $_file.disabled
		cvw_service -r httpd
	done

	if cvw_xml -t software/$_slug/public ; then
		cvw_firewall -t $_port
		cvw_firewall -t $_ssl_port
	fi

	cvw_say -o "$_slug:finish"
}


function apache_disable
{
	if cvw_service -c httpd ; then
		cvw_say -h "Disabling $_name"

		cvw_service -d httpd

		cvw_say -o "$_slug:disable"
	fi
}


while getopts ":ce:ip:x" opt ; do
	case $opt in
		c)
			if [[ -s $_CONF_FILE.tmp_VW ]] ; then
				echo -n $_CONF_FILE
			else
				cvw_say -f "$_prog: missing $_CONF_FILE.tmp_VW"
			fi
			exit 0
		;;

		e)
			cvw_xml -a software/$_slug || exit 0
			OPTARG=${OPTARG%.conf}
			OPTARG=${OPTARG##*/}
			cvw_say -s "conf.d: $OPTARG"
			rm -f /etc/httpd/conf.d/$OPTARG.conf.disabled
			echo "/etc/httpd/conf.d/$OPTARG.conf" >>/tmp/cvw/apache.enabled
			exit 0
		;;

		i)
			if cvw_xml -a software/$_slug ; then
				apache_initial
			else
				apache_disable
			fi
			exit 0
		;;

		p)
			apache_add_php $OPTARG
			exit 0
		;;

		x)
			if cvw_xml -a software/$_slug ; then
				apache_finish
			fi
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

