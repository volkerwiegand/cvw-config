#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_kivitendo - Install or remove kivitendo ERP
######                 http://www.kivitendo.de/
######                 https://www.kivitendo.de/doc/html/
######                 https://demo.kivitendo.de/doc/html/index.html
######
###### (c) 2016 Volker Wiegand <volker.wiegand@cvw.de>
######          This file is part of "CVW Config"
######          See LICENSE for copyright information
######
######          TODO backup postgresql databases for kivitendo, not entire dir
######          TODO use kivitendo with nginx
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="kivitendo ERP"
_slug="kivitendo"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i   Install or remove $_name
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function kivitendo_install
{
	cvw_say -h "Installing $_name"
	cvw_xml -a software/postgresql || cvw_say -f "$_prog: requires postgresql"
	local _root=$(cvw_xml -r system/app_root)/$_slug
	local _uri=$(cvw_xml -r software/$_slug/uri)
	local _pass=$(cvw_xml -r software/$_slug/password)
	local _mail=$(cvw_xml -r software/$_slug/mail/method)
	[[ -s /tmp/cvw/error ]] && exit 1
	local _conf _file _subdir _perl

	cvw_postgresql -u $_slug $_pass

	cvw_rpm -i gcc
	cvw_rpm -i poppler-utils
	cvw_rpm -i perl-GD
	cvw_rpm -i perl-DBD-Pg
	curl -fsL http://cpanmin.us | perl - --self-upgrade
	for _perl in \
		Digest::MD5 \
		Path::Tiny \
		Archive::Zip \
		Algorithm::CheckDigits \
		CGI \
		Clone \
		Config::Std \
		DateTime \
		DateTime::Format::Strptime \
		Email::Address \
		Email::MIME \
		FCGI \
		File::Copy::Recursive \
		File::MimeInfo::Magic \
		HTML::Parser \
		HTML::Restrict \
		Image::Info \
		JSON \
		List::MoreUtils \
		List::UtilsBy \
		Net::SMTP::SSL \
		Net::SSLGlue \
		Params::Validate \
		PBKDF2::Tiny \
		PDF::API2 \
		Rose::Object \
		Rose::DB \
		Rose::DB::Object \
		String::ShellQuote \
		Sort::Naturally \
		Template \
		Text::CSV_XS \
		Text::Iconv \
		URI \
		XML::Writer \
		YAML
	do
		cvw_say -a "PERL install $_perl"
		cpanm --quiet $_perl 2>>/tmp/cvw/error
	done

	cvw_backup $_slug $_root/app $(cvw_postgresql -d)
	cvw_unpack -i $_slug $_root/app VERSION

	_file=/tmp/cvw/$_slug.check
	(cd $_root/app && ./scripts/installation_check.pl >$_file 2>&1)
	if grep -q -s "OK" $_file ; then
		cvw_say -s "installation check okay"
	else
		cat $_file >>/tmp/cvw/error
		exit 1
	fi

	for _subdir in spool templates users webdav ; do
		mkdir -p $_root/app/$_subdir
		chown -R apache $_root/app/$_subdir
	done

	if [[ -d /var/local/backup/$_slug/last/dirs && \
	      -x /usr/local/bin/bkup.$_slug         && \
	      -x /usr/local/bin/rstr.$_slug ]] ; then
		cvw_say -s "updating / syncing backup"
		/usr/local/bin/bkup.$_slug
	fi

	_file="/tmp/cvw/kivitendo.mail_delivery"
	if [[ $_mail == "smtp" ]] ; then
		cat >$_file <<-EOF
			[mail_delivery]
			method = smtp
			host = $(cvw_xml -r software/$_slug/mail/host)
			port = $(cvw_xml -r software/$_slug/mail/port)
			security = $(cvw_xml -r software/$_slug/mail/security)
			login = $(cvw_xml -r software/$_slug/mail/login)
			password = $(cvw_xml -r software/$_slug/mail/password)
		EOF
		[[ -s /tmp/cvw/error ]] && exit 1
	else
		cvw_say -f "invalid mail_delivery method '$_mail'"
	fi

	_file=$_root/app/config/$_slug.conf
	cat >$_file.tmp_VW <<-EOF
		[authentication]
		admin_password = $_pass
		module = DB
		cookie_name = kivitendo_session_id
		session_timeout = 480
		failed_login_penalty = 5

		[authentication/database]
		host     = localhost
		port     = 5432
		db       = $_slug
		user     = $_slug
		password = $_pass

		#
		# Other settings
		#
		[system]
		language = de
		default_manager = german

		[paths]
		userspath = users
		spool = spool
		templates = templates
		memberfile = users/members

		$(cat /tmp/cvw/kivitendo.mail_delivery)

		[applications]
		openofficeorg_writer = oowriter
		xvfb = Xvfb
		html2ps = html2ps
		ghostscript = gs
		latex = pdflatex
		python_uno = python
		aqbanking = /usr/bin/aqbanking-cli

		[environment]
		path = /usr/local/bin:/usr/bin:/bin

		[task_server]
		debug = 0
		run_as = apache
	EOF
	cvw_file -v $_file $(cvw_php -s)

	cvw_postgresql -u $_slug $_pass
	cvw_postgresql -p $_slug $_pass

	_file="/usr/lib/systemd/system/kivitendo-task-server.service"
	cat >$_file.tmp_VW <<-EOF
		[Unit]
		Description=kivitendo background jobs server
		Requires=$(cvw_postgresql -s).service
		After=$(cvw_postgresql -s).service

		[Service]
		Type=forking
		# Change the user to the one your web server runs as.
		User=apache
		# Change these two to point to the kivitendo "task_server.pl" location.
		ExecStart=$_root/app/scripts/task_server.pl start
		ExecStop=$_root/app/scripts/task_server.pl stop
		Restart=always
		ProtectSystem=full
		ProtectHome=yes
		PrivateTmp=yes

		[Install]
		WantedBy=multi-user.target
	EOF
	cvw_file -v $_file kivitendo-task-server

	if cvw_xml -a software/nginx ; then
		cvw_nginx -p $_slug
	fi

	if cvw_xml -a software/apache ; then
		cat >/tmp/cvw/apache.block <<-EOF

			   AliasMatch ^${_uri%/}/[^/]+\\.pl $_root/app/dispatcher.fpl
			   Alias $_uri $_root/app
			   AddHandler fcgid-script .fpl
			   FcgidMaxRequestLen 10485760
			   <Directory $_root/app>
			      AllowOverride All
			      Options ExecCGI Includes FollowSymlinks
			      Require all granted
			      <IfModule mod_passenger.c>
			         PassengerEnabled off
			      </IfModule>
			   </Directory>
			   <Directory $_root/app/users>
			      # Require all granted
			      Require all denied
			   </Directory>
		EOF
		cvw_apache -p $_slug
	fi

	cvw_url -a "$_name" $_uri

	cvw_say -o "$_slug"
}


function kivitendo_remove
{
	local _root=$(cvw_xml -r system/app_root)/$_slug
	local _file

	if [[ -d $_root ]] ; then
		cvw_say -h "Removing $_name"
		cvw_backup -z $_slug
		# cvw_postgresql -z $_slug
		rm -rf $_root
		cvw_say -o "$_slug:remove"
	fi

	cvw_service -z kivitendo-task-server

	rm -f /tmp/cvw/error
}


while getopts ":i" opt ; do
	case $opt in
		i)
			if cvw_xml -a software/$_slug ; then
				kivitendo_install
			else
				kivitendo_remove
			fi
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

