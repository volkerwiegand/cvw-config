#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_phplist - Install or remove phpList
######               https://www.phplist.org/
######               https://www.phplist.org/manual/ch028_installation.xhtml
######
###### (c) 2016-2017 Volker Wiegand <volker.wiegand@cvw.de>
######               This file is part of "CVW Config"
######               See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="phpList"
_slug="phplist"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i   Install or remove $_name
		    or: $_prog -g   Generate config template
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function generate
{
	local _fqdn=$(cvw_xml -r host/fqdn)

	cat <<-EOF
	    <phplist active="true">
	      <uri>/news</uri>
	      <password>$(cvw -p 20)</password>
	      <test>0</test>
	      <admin>
	        <name>newsadmin</name>
	        <password>$(cvw -p 20)</password>
	        <email>newsadmin@${_fqdn#*.}</email>
	      </admin>
	    </phplist>

	EOF
	exit 0
}


function phplist_install
{
	cvw_say -h "Installing $_name"
	cvw_xml -a software/mysql || cvw_say -f "$_prog: requires mysql"
	cvw_xml -a software/php   || cvw_say -f "$_prog: requires php"
	local _fqdn=$(cvw_xml -r host/fqdn)
	local _root=$(cvw_xml -r system/app_root)/$_slug
	local _uri=$(cvw_xml -r software/$_slug/uri)
	local _pass=$(cvw_xml -r software/$_slug/password)
	local _test=$(cvw_xml -R software/$_slug/test 1)
	[[ -s /tmp/cvw/error ]] && exit 1
	local _conf _file _dir

	if [[ -s /tmp/cvw/info ]] ; then
		cat >>/tmp/cvw/info <<-EOF
			    ====== $_name ======
			      Upload Directory ........: $_root/app/uploadimages
			      Test Mode (0 or 1) ......: $_test
			      Admin URL ...............: $(cvw_url -r $_uri)admin
			      Admin User ..............: $(cvw_xml -r software/$_slug/admin/name)
			      Admin Password ..........: $(cvw_xml -r software/$_slug/admin/password)
			      Admin Email .............: $(cvw_xml -r software/$_slug/admin/email)
		EOF
	fi
	[[ -s /tmp/cvw/error ]] && exit 1

	cvw_mysql -c $_slug $_slug $_pass utf8_general_ci
	cvw_backup -m $_slug -u $_slug -p $_pass $_slug

	cvw_unpack -i $_slug $_root/download VERSION
	if [[ ! -d $_root/app ]] ; then
		mv $_root/download/public_html/lists $_root
		mv $_root/lists $_root/app
	fi
	chmod -R go-w $_root/app
	rm -f $_root/app/index.html

	for _dir in uploadimages ; do
		mkdir -p $_root/app/$_dir
		chown -R apache $_root/app/$_dir
	done

	if [[ -d /var/local/backup/$_slug/last/mysql && \
	      -d /var/local/backup/$_slug/last/dirs  && \
	      -x /usr/local/bin/bkup.$_slug          && \
	      -x /usr/local/bin/rstr.$_slug ]] ; then
		cvw_say -s "updating / syncing backup"
		/usr/local/bin/bkup.$_slug
	fi

	# TODO setup language according to config

	_file="$_root/app/config/config.php"
	cat >$_file.tmp_VW <<-EOF
		<?php

		\$default_system_language = "de";
		\$language_module = 'german.inc';

		\$database_host = 'localhost';
		\$database_name = '$_slug';
		\$database_user = '$_slug';
		\$database_password = '$_pass';

		define('PHPMAILERHOST', '');
		define('TEST', $_test);

		\$pageroot = '$_uri';
	EOF
	cvw_file -v $_file $(cvw_php -s)

	if cvw_xml -a software/nginx ; then
		cvw_nginx -p $_slug
	fi

	if cvw_xml -a software/apache ; then
		cvw_apache -p $_slug
	fi

	cvw_url -a "$_name" $_uri

	cvw_say -o "$_slug"
}


function phplist_remove
{
	local _root=$(cvw_xml -r system/app_root)/$_slug

	cvw_backup -z $_slug
	cvw_mysql -z $_slug $_slug
	if [[ -d $_root ]] ; then
		cvw_say -h "Removing $_name"
		rm -rf $_root
		cvw_say -o "$_slug:remove"
	fi

	rm -f /tmp/cvw/error
}


while getopts ":ig" opt ; do
	case $opt in
		i)
			if cvw_xml -a software/$_slug ; then
				phplist_install
			else
				phplist_remove
			fi
			exit 0
		;;

		g)
			generate
			exit 0
		;;
		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

