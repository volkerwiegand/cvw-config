#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_ruby - Install or remove Ruby (with Rails and Passenger)
######            https://www.ruby-lang.org/
######            https://rubyonrails.org/
######            https://www.phusionpassenger.com/library/deploy/apache/deploy/
######
###### (c) 2016-2020 Volker Wiegand <volker.wiegand@cvw.de>
######               This file is part of "CVW Config"
######               See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="Ruby / Rails / Passenger"
_slug="ruby"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i   Install or remove $_name
		    or: $_prog -g   Generate config template
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function ruby_generate
{
	cat <<-EOF
	    <ruby active="true">
	    </ruby>

	EOF
	exit 0
}


function ruby_install
{
	cvw_say -h "Installing $_name"
	cvw_xml -a software/nodejs || cvw_say -f "$_prog: requires nodejs"
	local _file _version

	if [[ ! -x /usr/local/bin/ruby ]] ; then
		cvw_rpm -l development
		cvw_unpack -i $_slug /root/src/ruby README.md
		cd /root/src/ruby && ./configure && make && make install
	fi
	_version=$(ruby --version)
	[[ $? -eq 0 ]] || cvw_say -f "Ruby install failed"
	cvw_say -s $_version

	if [[ ! -x /usr/local/bin/rails ]] ; then
		gem install rails
	fi
	_version=$(rails --version)
	[[ $? -eq 0 ]] || cvw_say -f "Rails install failed"
	cvw_say -s $_version

	if [[ ! -x /usr/local/bin/passenger-install-apache2-module ]] ; then
		gem install passenger
		/usr/local/bin/passenger-install-apache2-module --auto --languages ruby
	fi
	_version=$(passenger --version)
	[[ $? -eq 0 ]] || cvw_say -f "Passenger install failed"
	[[ $_version =~ 6.0.6 ]] || cvw_say -f "Passenger was updated ($_version)"
	cvw_say -s $_version

	if cvw_xml -a software/apache ; then
		_file="/etc/httpd/conf.d/passenger.conf"
		cat >$_file.tmp_VW <<-EOF
		   LoadModule passenger_module /usr/local/lib/ruby/gems/2.7.0/gems/passenger-6.0.6/buildout/apache2/mod_passenger.so
		   <IfModule mod_passenger.c>
		     PassengerRoot /usr/local/lib/ruby/gems/2.7.0/gems/passenger-6.0.6
		     PassengerDefaultRuby /usr/local/bin/ruby
		   </IfModule>
		EOF
		cvw_file -v $_file $(cvw_php -s)
		cvw_apache -e passenger
	fi

	# TODO integrate Passenger into Nginx

	if grep -q -s upgrade /tmp/cvw/updating ; then
		cvw_say -s "TODO - updating Ruby Gems"
		# TODO check for Gems upgrade - "gem outdated"
	fi

	cvw_say -o "$_slug"
}


function ruby_remove
{
	if [[ -x /usr/local/bin/ruby ]] ; then
		cvw_say -h "Removing $_name"
		cvw_say -o "$_slug:remove"
	fi
}


while getopts ":ig" opt ; do
	case $opt in
		i)
			if cvw_xml -a software/$_slug ; then
				ruby_install
			else
				ruby_remove
			fi
			exit 0
		;;

		g)
			ruby_generate
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

