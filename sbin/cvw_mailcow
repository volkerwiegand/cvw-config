#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_mailcow - Install or remove Mailcow (https://mailcow.email/)
######               https://mailcow.github.io/mailcow-dockerized-docs/i_u_m_install/
######               https://community.hetzner.com/tutorials/setup-mailserver-with-mailcow
######
###### (c) 2016-2020 Volker Wiegand <volker.wiegand@cvw.de>
######               This file is part of "CVW Config"
######               See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="Mailcow"
_slug="mailcow"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i   Install or remove $_name
		    or: $_prog -g   Generate config template
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function mailcow_generate
{
	cat <<-EOF
	    <mailcow active="true">
	      <tcp_port>25</tcp_port>
	      <tcp_port>80</tcp_port>
	      <tcp_port>110</tcp_port>
	      <tcp_port>143</tcp_port>
	      <tcp_port>443</tcp_port>
	      <tcp_port>465</tcp_port>
	      <tcp_port>587</tcp_port>
	      <tcp_port>993</tcp_port>
	      <tcp_port>995</tcp_port>
	      <tcp_port>4190</tcp_port>
	    </mailcow>

	EOF
	exit 0
}


function mailcow_install
{
	cvw_say -h "Installing $_name"
	cvw_xml -a software/docker || cvw_say -f "$_prog: requires docker"
	local _fqdn=$(cvw_xml -r host/fqdn)
	local _zone=$(cvw_xml -r system/timezone)
	[[ -s /tmp/cvw/error ]] && exit 1
	local _base=/root/docker
	local _file

	if [[ -s /tmp/cvw/info ]] ; then
		cat >>/tmp/cvw/info <<-EOF
			    ====== $_name ======
			      Hostname ................: $_fqdn
		EOF
	fi

	cvw_git -i mailcow -d $_base
	cd $_base

	if [[ ! -s $_base/mailcow.conf ]] ; then
		MAILCOW_HOSTNAME=$_fqdn MAILCOW_TZ=$_zone ./generate_config.sh
	fi
	if [[ ! -s $_base/mailcow.conf ]] ; then
		cvw_say -f "$_prog: could not generate $_base/mailcow.conf"
	fi

	_file=$_base/data/conf/nginx/redirect.conf
	cat >$_file.tmp_VW <<-EOF
		server {
		  root /web;
		  listen 80 default_server;
		  listen [::]:80 default_server;
		  include /etc/nginx/conf.d/server_name.active;
		  if ( \$request_uri ~* "%0A|%0D" ) { return 403; }
		  location ^~ /.well-known/acme-challenge/ {
		    allow all;
		    default_type "text/plain";
		  }
		  location / {
		    return 301 https://\$host\$uri\$is_args\$args;
		  }
		}
	EOF
	cvw_file -v $_file

	cvw_xml -l software/$_slug/tcp_port | sort -u | while read _port ; do
		cvw_firewall -t $_port
	done

	# In order to start the party, a simple one-liner will do.
	# docker-compose up -d

	cvw_say -o "$_slug"
}


function mailcow_remove
{
	if [[ -s /root/docker/docker-compose.yml ]] ; then
		cvw_say -h "Please remove $_name manually"
		cvw_say -o "$_slug:remove"
	fi

	rm -f /tmp/cvw/error
}


while getopts ":ig" opt ; do
	case $opt in
		i)
			if cvw_xml -a software/$_slug ; then
				mailcow_install
			else
				mailcow_remove
			fi
			exit 0
		;;

		g)
			mailcow_generate
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

