#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_radicale - Install or remove Radicale
######                http://radicale.org/
######                http://radicale.org/setup/
######
###### (c) 2016-2019 Volker Wiegand <volker.wiegand@cvw.de>
######               This file is part of "CVW Config"
######               See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="Radicale"
_slug="radicale"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i   Install or remove $_name
		    or: $_prog -g   Generate config template
		    or: $_prog -q   Query download URL (for update check)
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function generate_template
{
	cat <<-EOF
	    <!-- users -->
	    <user id="$_slug" active="false">
	      <info>CardDAV and CalDAV User</info>
	      <password>$(cvw -p 20)</password>
	      <home>/var/local/$_slug</home>
	    </user>

	    <!-- software -->
	    <$_slug active="true" git="true">
	      <port>5232</port>
	    </$_slug>

	EOF
	exit 0
}


function query_url
{
	echo "Link ............: http://radicale.org/download/"
	exit 0
}


function radicale_exec
{
	local _home=$(cvw_user -h $_slug)
	local _repo=$_home/collections

	cvw_user -r $_slug -d $_repo "$*"
}


function radicale_install
{
	cvw_say -h "Installing $_name"
	cvw_xml -a software/certbot || cvw_say -f "$_prog: requires certbot"
	local _fqdn=$(cvw_xml -r host/fqdn)
	local _port=$(cvw_xml -r software/$_slug/port)
	[[ -s /tmp/cvw/error ]] && exit 1
	cvw_user -s $_slug
	local _home=$(cvw_user -h $_slug)
	local _pass=$(cvw_user -p $_slug)
	local _info=$(cvw_user -g $_slug)
	local _addr=$(cvw_user -e $_slug)
	local _repo=$_home/collections
	local _conf=/etc/$_slug
	local _cert=/etc/letsencrypt/live/$_fqdn
	local _hook="# hook"
	local _file _user

	if [[ -s /tmp/cvw/info ]] ; then
		cat >>/tmp/cvw/info <<-EOF
			    ====== $_name ======
			      WebGUI ..................: https://$_fqdn:$_port/
			      Username ................: $_slug
			      User Info ...............: $_info
			      User E-Mail .............: $_addr
			      Password ................: $_pass
		EOF
		[[ -s /tmp/cvw/error ]] && exit 1
	fi

	cvw_backup $_slug $_repo

	cvw_rpm -i python3-pip
	python3 -m pip install --upgrade "passlib[bcrypt]"
	python3 -m pip install --upgrade $_slug
	mkdir -p $_conf
	install -o $_slug -g $_slug -d $_repo

	htpasswd -B -c -b $_conf/password $_slug $_pass

	for _user in $(cvw_xml -i software/$_slug/user | sort) ; do
		local _base="software/$_slug/user:$_user"
		local _pswd=$(cvw_xml -r $_base/password)
		htpasswd -B -b $_conf/password $_user $_pswd
		if [[ -s /tmp/cvw/info ]] ; then
			cat >>/tmp/cvw/info <<-EOF
				          User / Password .....: $_user / $_pswd
			EOF
			[[ -s /tmp/cvw/error ]] && exit 1
		fi
	done

	if cvw_xml -t software/$_slug/git ; then
		if [[ ! -d $_repo/.git ]] ; then
			cvw_say -s "Adding Git versioning"
			radicale_exec "git init"

			radicale_exec "git config user.name '$_slug'"
			radicale_exec "git config user.email '$_addr'"

			_file=$_repo/README.md
			cat >$_file.tmp_VW <<-EOF
				Save changes using Git
			EOF
			cvw_file -u $_slug -v $_file

			_file=$_repo/.gitignore
			cat >$_file.tmp_VW <<-EOF
				.Radicale.cache
				.Radicale.lock
				.Radicale.tmp-*
			EOF
			cvw_file -u $_slug -v $_file

			radicale_exec "git add README.md .gitignore"
			radicale_exec "git commit -m 'first commit'"
		fi

		_hook="hook"
	fi

	_file=$_conf/config
	cat >$_file.tmp_VW <<-EOF
		[server]
		hosts = 0.0.0.0:$_port
		ssl = true
		certificate = $_cert/fullchain.pem
		key = $_cert/privkey.pem

		[auth]
		type = htpasswd
		htpasswd_filename = $_conf/password
		htpasswd_encryption = bcrypt

		[storage]
		filesystem_folder = $_repo
		$_hook = git add -A && (git diff --cached --quiet || git commit -m "Changes by "%(user)s)

		[rights]
		type = authenticated
	EOF
	cvw_file -v $_file $_slug

	_file=/etc/systemd/system/$_slug.service
	cat >$_file.tmp_VW <<-EOF
		[Unit]
		Description=A simple CalDAV (calendar) and CardDAV (contact) server
		After=network.target
		Requires=network.target

		[Service]
		ExecStart=/usr/bin/env python3 -m $_slug
		Restart=on-failure
		User=$_slug
		# Deny other users access to the calendar data
		UMask=0027
		# Optional security settings
		ReadWritePaths=$_repo

		[Install]
		WantedBy=multi-user.target
	EOF
	cvw_file -v $_file $_slug

	cvw_service -s $_slug
	cvw_firewall -t $_port

	cvw_borgclient -d $_repo

	cvw_url -a "$_name" ":$_port/"

	cvw_say -o "$_slug"
}


function radicale_remove
{
	if cvw_service -c $_slug ; then
		cvw_service -z $_slug
	fi

	if id $_slug >/dev/null 2>&1 ; then
		cvw_say -h "Removing $_name"
		cvw_backup -z $_slug
		cvw_user -z $_slug
		rm -rf /etc/$_slug
		cvw_say -o "$_slug:remove"
	fi
}


while getopts ":igq" opt ; do
	case $opt in
		i)
			if cvw_xml -a software/$_slug ; then
				radicale_install
			else
				radicale_remove
			fi
			exit 0
		;;

		g)
			generate_template
			exit 0
		;;

		q)
			query_url
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

