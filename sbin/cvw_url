#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_url - Collect and print installed URLs
######           (internal service functions)
######
###### (c) 2017 Volker Wiegand <volker.wiegand@cvw.de>
######          This file is part of "CVW Config"
######          See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -a app uri   Add URL for app
		    or: $_prog -r uri       Print URL root
		    or: $_prog -s           Print summary
		Called with: '$_prog $_args'
	EOF

	if [ -d /tmp/cvw ] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function url_summary
{
	local _fqdn=$(cvw_xml -r host/fqdn)
	[[ -s /tmp/cvw/error ]] && exit 1
	local _line _app _max _uri

	test -s /tmp/cvw/urls || return

	_max=$(sort -n /tmp/cvw/url_len | tail -n 1)

	cvw_say -h "URL summary"
	cat /tmp/cvw/urls | while read _line ; do
		IFS='#'
		set -- $_line
		_app=$1
		_uri=$2
		unset IFS

		printf "    %-*s --> https://%s%s\n" $_max "$_app" $_fqdn $_uri
	done
}


function url_root
{
	local _fqdn=$(cvw_xml -r host/fqdn)
	[[ -s /tmp/cvw/error ]] && exit 1
	local _uri=$1

	if [[ $_uri == "/" ]] ; then
		echo -n "https://$_fqdn$_uri"
	else
		echo -n "https://$_fqdn$_uri/"
	fi
}


while getopts ":a:r:s" opt ; do
	case $opt in
		a)
			_app=$OPTARG
		;;

		r)
			url_root $OPTARG
			exit 0
		;;

		s)
			url_summary
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

test $# -eq 1 || usage
echo "$_app#$1" >>/tmp/cvw/urls
echo "${#_app}" >>/tmp/cvw/url_len

exit 0

