#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_postgresql - Install or remove PostgreSQL 9.6
######                  https://postgresql.org/
######
###### (c) 2016 Volker Wiegand <volker.wiegand@cvw.de>
######          This file is part of "CVW Config"
######          See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="PostgreSQL 9.6"
_slug="postgresql"

_DATADIR="/var/lib/pgsql/9.6/data"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i             Install or $_name
		    or: $_prog -d             Get PostgreSQL data directory
		    or: $_prog -p user pass   Update password in .pgpass
		    or: $_prog -P user        Remove password for user
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function postgresql_check_user
{
	local _user=$1

	psql -U postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='$_user';" | grep -q 1
}


function postgresql_addpass
{
	local _user=$1
	local _pass=$2
	local _file="/root/.pgpass"

	if [[ -z $_pass ]] ; then
		cvw_file -e "/:$_user:/d" -m 0600 $_file
	elif grep -q -s ":$_user:" $_file ; then
		cvw_file -e "s/:$_user:.*/:$_user:$_pass/" -m 0600 $_file
	else
		echo "*:*:*:$_user:$_pass" >>$_file
		cvw_say -s "adding $_user to $_file"
	fi

	return 0
}


function postgresql_adduser
{
	local _user=$1
	local _pass=$2
	local _check

	if ! postgresql_check_user $_user ; then
		psql -U postgres -c "CREATE USER $_user WITH LOGIN CREATEDB;"
	fi

	psql -U postgres -c "ALTER USER $_user PASSWORD '$_pass';"
}


function postgresql_install
{
	cvw_say -h "$_name"
	local _pass=$(cvw_xml -r software/$_slug/password)
	[[ -s /tmp/cvw/error ]] && exit 1

	cvw_yum -a postgresql
	cvw_rpm -i postgresql96
	cvw_rpm -i postgresql96-server
	cvw_rpm -i postgresql96-contrib
	cvw_rpm -i postgresql96-devel

	if [[ ! -s $_DATADIR/PG_VERSION ]] ; then
		/usr/pgsql-9.6/bin/postgresql96-setup initdb
		cvw_service -S postgresql-9.6
		cvw_user -r postgres "psql -c \"ALTER USER postgres PASSWORD '$_pass';\""
	else
		cvw_service -s postgresql-9.6
	fi

	_file="$_DATADIR/pg_hba.conf"
	cvw_file -e $_file "/^host/s/ident/md5/" postgresql-9.6
	cvw_file -e $_file "/^local/s/peer/md5/" postgresql-9.6

	_file="/root/.pgpass"
	cat >$_file.tmp_VW <<-EOF
		# hostname:port:database:username:password
		*:*:*:postgres:$_pass
	EOF
	cvw_file -v $_file -m 0600 postgresql-9.6

	cvw_say -o "$_slug"
}


function postgresql_remove
{
	if cvw_service -c postgresql-9.6 ; then
		cvw_say -h "Removing $_name"

		cvw_rpm -e postgresql96-devel
		cvw_rpm -e postgresql96-contrib
		cvw_rpm -e postgresql96-server
		cvw_rpm -e postgresql96

		rm -rf /var/lib/pgsql

		cvw_say -o "$_slug:remove"
	fi
}


while getopts ":idp:P:u:U:" opt ; do
	case $opt in
		i)
			if cvw_xml -a software/$_slug ; then
				postgresql_install
			else
				postgresql_remove
			fi
			exit 0
		;;

		d)
			echo -n $_DATADIR
			exit 0
		;;

		p)
			_pw_user=$OPTARG
		;;

		P)
			if postgresql_check_user $OPTARG ; then
				postgresql_addpass $OPTARG
				exit
			fi
			exit 0
		;;

		u)
			_new_user=$OPTARG
		;;

		U)
			if postgresql_check_user $OPTARG ; then
				psql -U postgres -c "DROP ROLE $OPTARG;"
				exit
			fi
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

if [[ $_pw_user ]] ; then
	postgresql_addpass $_pw_user $1
	exit
fi

if [[ $_new_user ]] ; then
	postgresql_adduser $_new_user $1
	exit
fi

usage

