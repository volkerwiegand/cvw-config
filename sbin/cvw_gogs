#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_gogs - Install or remove gogs (Go Git Service)
######            http://gogs.io/
######            https://github.com/gogits/gogs/issues/1202
######            https://gogs.io/docs/intro/faqs
######
###### (c) 2016-2020 Volker Wiegand <volker.wiegand@cvw.de>
######               This file is part of "CVW Config"
######               See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="gogs (Go Git Service)"
_slug="gogs"
_dflt="0_12_3"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i   Install or remove $_name
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function gogs_install
{
	cvw_say -h "Installing $_name"
	cvw_xml -a software/mysql || cvw_say -f "$_prog: requires mysql"
	local _release=$(cvw_xml -R software/$_slug/release $_dflt)
	local _fqdn=$(cvw_xml -r host/fqdn)
	local _port=$(cvw_xml -R software/$_slug/port 8888)
	local _uri=$(cvw_xml -r software/$_slug/uri)
	local _pass=$(cvw_xml -r software/$_slug/password)
	local _secret=$(cvw_xml -r software/$_slug/secret)
	[[ -s /tmp/cvw/error ]] && exit 1
	cvw_user -s gogs
	local _home=$(cvw_user -h gogs)
	local _register="no"
	cvw_xml -t software/$_slug/register && _register="yes"
	local _file

	if [[ -s /tmp/cvw/info ]] ; then
		cat >>/tmp/cvw/info <<-EOF
			    ====== $_name ======
			      Software Release  .......: $_release
			      Database password .......: $_pass
			      Root URL ................: https://$_fqdn$_uri
			      Secret Key ..............: $_secret
			      Registration ............: $_register
		EOF
	fi
	[[ -s /tmp/cvw/error ]] && exit 1

	cvw_backup -m $_slug -u $_slug -p $_pass $_slug \
		$_home/gogs-repositories \
		$_home/app/log

	cvw_mysql -c $_slug $_slug $_pass utf8_general_ci

	cvw_unpack -i $_slug $_home/app gogs
	mkdir -p $_home/app/custom/conf

	_file="$_home/app/custom/conf/app.ini"
	cat >$_file.tmp_VW <<-EOF
		APP_NAME = $_name
		RUN_USER = gogs
		RUN_MODE = prod

		[repository]
		ROOT = $_home/gogs-repositories

		[server]
		ROOT_URL = https://$_fqdn$_uri
		DISABLE_SSH = false
		SSH_PORT = $(cvw_xml -R host/ssh_port 22)
		DOMAIN = ${_fqdn#*.}
		OFFLINE_MODE = false
		HTTP_ADDR = localhost
		HTTP_PORT = $_port

		[database]
		DB_TYPE = mysql
		HOST = 127.0.0.1:3306
		NAME = $_slug
		USER = $_slug
		PASSWD = $_pass
		SSL_MODE = disable
		PATH = data/gogs.db

		[mailer]
		ENABLED = false

		[service]
	EOF

	if [[ $_register == "yes" ]] ; then
		cat >>$_file.tmp_VW <<-EOF
			REGISTER_EMAIL_CONFIRM = true
			ENABLE_NOTIFY_MAIL = false
			DISABLE_REGISTRATION = false
		EOF
	else
		cat >>$_file.tmp_VW <<-EOF
			REGISTER_EMAIL_CONFIRM = false
			ENABLE_NOTIFY_MAIL = false
			DISABLE_REGISTRATION = true
		EOF
	fi

	cat >>$_file.tmp_VW <<-EOF
		ENABLE_CAPTCHA = true
		REQUIRE_SIGNIN_VIEW = true

		[picture]
		DISABLE_GRAVATAR = false

		[session]
		PROVIDER = file

		[log]
		MODE = file
		LEVEL = Info

		[security]
		INSTALL_LOCK = true
		SECRET_KEY = $_secret
	EOF
	cvw_file -v $_file gogs

	_file="/usr/lib/systemd/system/gogs.service"
	cat >$_file.tmp_VW <<-EOF
		[Unit]
		Description=Gogs (Go Git Service)
		Requires=mariadb.service
		After=mariadb.service

		[Service]
		Type=simple
		User=gogs
		Group=gogs
		WorkingDirectory=$_home/app
		ExecStart=$_home/app/gogs web -port $_port
		Restart=always
		Environment=USER=gogs HOME=$_home

		[Install]
		WantedBy=multi-user.target
	EOF
	cvw_file -v $_file gogs

	chown -R gogs:gogs $_home
	cvw_service -s gogs

	if cvw_xml -a software/apache ; then
		_conf="/etc/httpd/conf.d/vhost.conf.tmp_VW"
		[[ -s $_conf ]] || cvw_say -f "$_prog: missing $_conf"
		cat >>$_conf <<-EOF

			   ProxyPass $_uri http://127.0.0.1:$_port
			   ProxyPassReverse $_uri http://127.0.0.1:$_port
		EOF
	fi

	cvw_url -a "$_name" $_uri

	cvw_say -o "$_slug"
}


function gogs_remove
{
	if id gogs >/dev/null 2>&1 ; then
		cvw_say -h "Removing Gogs"
		cvw_backup -z $_slug
		cvw_service -z $_slug
		cvw_mysql -z $_slug $_slug
		userdel -fr gogs 2>/tmp/cvw/error
		cvw_say -o "$_slug:remove"
	fi

	rm -f /tmp/cvw/error
}


while getopts ":i" opt ; do
	case $opt in
		i)
			if cvw_xml -a software/$_slug ; then
				gogs_install
			else
				gogs_remove
			fi
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

