#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_nextcloud - Install or remove Nextcloud
######                 https://nextcloud.com/
######                 https://docs.nextcloud.com/server/12/admin_manual/installation/index.html
######                 https://doc.owncloud.org/server/9.0/admin_manual/configuration_server/occ_command.html
######
###### (c) 2017 Volker Wiegand <volker.wiegand@cvw.de>
######          This file is part of "CVW Config"
######          See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="Nextcloud"
_slug="nextcloud"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i   Install or remove $_name
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function nextcloud_occ
{
	local _root=$(cvw_xml -r system/app_root)/$_slug

	cvw_user -r apache -d $_root/app php occ $*
	[[ $? -eq 0 ]] || exit 1
}


function nextcloud_install
{
	cvw_say -h "Installing $_name"
	cvw_xml -a software/mysql || cvw_say -f "$_prog: requires mysql"
	cvw_xml -a software/php   || cvw_say -f "$_prog: requires php"
	local _fqdn=$(cvw_xml -r host/fqdn)
	local _root=$(cvw_xml -r system/app_root)/$_slug
	local _uri=$(cvw_xml -r software/$_slug/uri)
	local _pass=$(cvw_xml -r software/$_slug/password)
	[[ -s /tmp/cvw/error ]] && exit 1
	local _file

	cvw_mysql -c $_slug $_slug $_pass utf8mb4_general_ci
	cvw_backup -m $_slug -u $_slug -p $_pass $_slug \
			$_root/app \
			$_root/data

	cvw_unpack -u apache -i $_slug $_root/app index.php

	_file="$_root/app/config/config.php"
	if [[ ! -s $_file ]] ; then
		cvw_user -r apache -d $_root/app \
			php occ maintenance:install \
			--database      "mysql" \
			--database-name "$_slug"  \
			--database-user "$_slug" \
			--database-pass "$_pass" \
			--admin-user    "admin" \
			--admin-pass    "$_pass"
		[[ $? -eq 0 ]] || exit 1
	fi
	if [[ ! -d $_root/data ]] ; then
		cvw_say -s "moving data out of docroot"
		mv $_root/app/data $_root/data
	fi
	if ! grep -q "$_root/data" $_file ; then
		nextcloud_occ config:system:set datadirectory --value=$_root/data
	fi
	if ! grep -q "$_fqdn" $_file ; then
		nextcloud_occ config:system:set trusted_domains 1 --value=$_fqdn
	fi
	if ! grep -q "APCu" $_file ; then
		nextcloud_occ config:system:set memcache.local --value=\\\\OC\\\\Memcache\\\\APCu
	fi

	if [[ -d /var/local/backup/$_slug/last/mysql && \
	      -d /var/local/backup/$_slug/last/dirs  && \
	      -x /usr/local/bin/bkup.$_slug          && \
	      -x /usr/local/bin/rstr.$_slug ]] ; then
		cvw_say -s "updating / syncing backup"
		/usr/local/bin/bkup.$_slug
	fi

	if cvw_xml -a software/nginx ; then
		_file="/tmp/cvw/nginx.options"
		cat >$_file <<-EOF
			root $_root/app;
			    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
			    add_header X-Content-Type-Options nosniff;
			    add_header X-Frame-Options "SAMEORIGIN";
			    add_header X-XSS-Protection "1; mode=block";
			    add_header X-Robots-Tag none;
			    gzip off;
			    rewrite ^${_uri%/}/caldav(.*)\$ ${_uri%/}/remote.php/caldav\$1 redirect;
			    rewrite ^${_uri%/}/carddav(.*)\$ ${_uri%/}/remote.php/carddav\$1 redirect;
			    rewrite ^${_uri%/}/webdav(.*)\$ ${_uri%/}/remote.php/webdav\$1 redirect;
			    index index.php;
			    error_page 403 ${_uri%/}/core/templates/403.php;
			    error_page 404 ${_uri%/}/core/templates/404.php;

			   # location ~ ^${_uri%/}/(?:\\.htaccess|data|config|db_structure\\.xml|README) {
			   #   deny all;
			   # }
		EOF
		cvw_nginx -p $_slug
	fi

	if cvw_xml -a software/apache ; then
		cat >/tmp/cvw/apache.block <<-EOF

			   Alias $_uri $_root/app
			   <Directory $_root/app>
			      Options +FollowSymlinks
			      AllowOverride All
			      Satisfy Any
			      Require all granted
			      <IfModule mod_dav.c>
			         Dav off
			      </IfModule>
			      <IfModule mod_passenger.c>
			         PassengerEnabled off
			      </IfModule>
			      <IfModule mod_headers.c>
			         Header always set Strict-Transport-Security "max-age=15552000; includeSubDomains"
			      </IfModule>
			      SetEnv HOME $_root/app
			      SetEnv HTTP_HOME $_root/app
			   </Directory>
		EOF
	fi

	cvw_url -a "$_name" $_uri

	cvw_say -o "$_slug"
}


function nextcloud_remove
{
	local _root=$(cvw_xml -r system/app_root)/$_slug

	cvw_backup -z $_slug
	cvw_mysql -z $_slug $_slug
	if [[ -d $_root ]] ; then
		cvw_say -h "Removing $_name"
		rm -rf $_root
		cvw_say -o "$_slug:remove"
	fi

	rm -f /tmp/cvw/error
}


while getopts ":i" opt ; do
	case $opt in
		i)
			if cvw_xml -a software/$_slug ; then
				nextcloud_install
			else
				nextcloud_remove
			fi
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

