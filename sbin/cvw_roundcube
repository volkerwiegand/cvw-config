#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_roundcube - Install or remove Roundcube webmail
######                 https://roundcube.net/
######                 https://github.com/roundcube/roundcubemail/wiki/Installation
######
###### (c) 2016-2017 Volker Wiegand <volker.wiegand@cvw.de>
######               This file is part of "CVW Config"
######               See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="Roundcube webmail"
_slug="roundcube"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i   Install or remove $_name
		    or: $_prog -g   Generate config template
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function generate
{
	cat <<-EOF
	    <$_slug active="true">
	      <uri>/webmail</uri>
	      <alias>/roundcube</alias>
	      <password>$(cvw -p 20)</password>
	      <key>$(cvw -p 10).--.$(cvw -p 10)</key>
	    </$_slug>

	EOF
	exit 0
}


function roundcube_install
{
	cvw_say -h "Installing $_name"
	cvw_xml -a software/mysql || cvw_say -f "$_prog: requires mysql"
	cvw_xml -a software/php   || cvw_say -f "$_prog: requires php"
	local _fqdn=$(cvw_xml -r host/fqdn)
	local _lang=$(cvw_xml -r system/language)
	local _root=$(cvw_xml -r system/app_root)/$_slug
	local _uri=$(cvw_xml -r software/$_slug/uri)
	local _pass=$(cvw_xml -r software/$_slug/password)
	local _key=$(cvw_xml -r software/$_slug/key)
	local _admin=$(cvw_xml -R software/$_slug/admin admin)
	[[ -s /tmp/cvw/error ]] && exit 1
	local _conf _file _installer _plugin _plugins

	if [[ -s /tmp/cvw/info ]] ; then
		cat >>/tmp/cvw/info <<-EOF
			    ====== $_name ======
			      URL .....................: https://$_fqdn$_uri/
			      Admin Email .............: $_admin@${_fqdn#*.}
			      Admin Password ..........: $(cvw_user -p $_admin)
		EOF
		[[ -s /tmp/cvw/error ]] && exit 1
	fi

	cvw_mysql -c $_slug $_slug $_pass utf8_general_ci
	cvw_backup -m $_slug -u $_slug -p $_pass $_slug \
			$_root/app/logs \
			$_root/app/temp

	cvw_unpack -i $_slug $_root/app index.php
	for _subdir in temp logs ; do
		mkdir -p $_root/app/$_subdir
		chown -R apache $_root/app/$_subdir
	done

	# TODO find better way to check if installer should run

	if [[ -s /var/local/backup/$_slug/last/mysql && \
	      -d /var/local/backup/$_slug/last/dirs  && \
	      -x /usr/local/bin/bkup.$_slug          && \
	      -x /usr/local/bin/rstr.$_slug ]] ; then
		cvw_say -s "updating backup"
		/usr/local/bin/bkup.$_slug
		chmod 0700 $_root/app/installer
		_installer="false"
	else
		cvw_say -a "Installer URL ...........: $(cvw_url -r $_uri)installer/"
		_installer="true"
	fi

	_plugins=""
	for _plugin in $(cvw_xml -l software/$_slug/plugin | sort) ; do
		if [[ -n "$_plugins" ]] ; then
			_plugins="$_plugins, "
		fi
			_plugins="$_plugins'$_plugin'"
	done
	_file=$_root/app/config/config.inc.php
	cat >$_file.tmp_VW <<-EOF
		<?php
		\$config['db_dsnw']           = 'mysql://$_slug:$_pass@localhost/$_slug';
		\$config['default_host']      = 'localhost';
		\$config['support_url']       = 'mailto:postmaster@${_fqdn#*.}';
		\$config['des_key']           = '$_key';
		\$config['product_name']      = '$_name';
		\$config['plugins']           = array($_plugins);
		\$config['language']          = '$_lang';
		\$config['spellcheck_engine'] = 'googie';
		\$config['enable_installer']  = $_installer;
	EOF
	cvw_file -v $_file $(cvw_php -s)

	if cvw_xml -a software/nginx ; then
		cvw_nginx -p $_slug
	fi

	if cvw_xml -a software/apache ; then
		_file=/tmp/cvw/apache.block
		echo "" >$_file
		echo "   Alias $_uri $_root/app" >>$_file
		for _alias in $(cvw_xml -l software/$_slug/alias | sort) ; do
			echo "   Alias $_alias $_root/app" >>$_file
		done
		cat >>$_file <<-EOF
			   <Directory $_root/app>
			      Options Indexes FollowSymLinks MultiViews
			      <IfModule mod_passenger.c>
			         PassengerEnabled off
			      </IfModule>
			      AllowOverride all
			      Require all granted
			   </Directory>
		EOF
		cvw_apache -p $_slug
	fi

	cvw_url -a "$_name" $_uri
	for _alias in $(cvw_xml -l software/$_slug/alias | sort) ; do
		cvw_url -a "$_name" $_alias
	done

	cvw_say -o "$_slug"
}


function roundcube_remove
{
	local _root=$(cvw_xml -r system/app_root)/$_slug
	local _bkup=/var/local/backup/$_slug

	if [[ -d $_root || -d $_bkup ]] ; then
		cvw_say -h "Removing $_name"

		cvw_backup -z $_slug
		cvw_mysql -z $_slug $_slug

		if [[ -d $_root ]] ; then
			rm -rf $_root
		fi

		if grep -q -s upgrade /tmp/cvw/updating ; then
			if [[ -d $_bkup ]] ; then
				cvw_say -s "deleting backup"
				rm -rf $_bkup
			fi
		fi

		cvw_say -o "$_slug:remove"
	fi

	rm -f /tmp/cvw/error
}

while getopts ":ig" opt ; do
	case $opt in
		i)
			if cvw_xml -a software/$_slug ; then
				roundcube_install
			else
				roundcube_remove
			fi
			exit 0
		;;

		g)
			generate
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

