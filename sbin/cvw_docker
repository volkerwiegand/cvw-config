#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_docker - Install or remove Docker and Compose
######              https://docs.docker.com/
######              https://docs.docker.com/compose/
######              https://unix.stackexchange.com/questions/199966/
######
###### (c) 2016-2020 Volker Wiegand <volker.wiegand@cvw.de>
######               This file is part of "CVW Config"
######               See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="Docker and Compose"
_slug="docker"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i   Install or remove $_name
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function docker_install
{
	cvw_say -h "Installing $_name"
	local _compose="/var/lib/cvw_cfg/files/compose"
	local _dir _app _file _target _port

	if [[ ! -s /root/get-docker.sh ]] ; then
		curl -sSL https://get.docker.com/ >/root/get-docker.sh
	fi
	if [[ ! -x /usr/bin/docker ]] ; then
		sh /root/get-docker.sh
	fi
	cvw_download -i docker_completion /etc/bash_completion.d

	cvw_service -s docker

	cvw_download -i docker_compose /usr/local/bin
	chmod +x /usr/local/bin/docker-compose
	cvw_download -i docker_compose_completion /etc/bash_completion.d

	mkdir -p $_compose
	find $_compose -type d | while read _dir ; do
		_file="$_dir/docker-compose.yml"
		test -r $_file || continue
		_target="/root/${_dir##*/}/docker-compose.yml"
		mkdir -p ${_target%/*}
		cp $_file $_target.tmp_VW
		cvw_file -v $_target
		cvw_say -a "docker-compose: $_target"
	done

	cvw_xml -l software/$_slug/tcp_port | sort -u | while read _port ; do
		cvw_firewall -t $_port
	done

	cvw_say -o "$_slug"
}


function docker_remove
{
	if [[ -x /usr/bin/docker ]] ; then
		cvw_say -h "Please remove $_name manually"
		cvw_say -o "$_slug:remove"
	fi

	rm -f /tmp/cvw/error
}


while getopts ":i" opt ; do
	case $opt in
		i)
			if cvw_xml -a software/$_slug ; then
				docker_install
			else
				docker_remove
			fi
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

