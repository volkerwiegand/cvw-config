#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_yellow - Install or remove Datenstrom Yellow CMS
######              https://datenstrom.se/yellow/
######              https://developers.datenstrom.se/help/how-to-make-a-website
######
###### (c) 2016-2019 Volker Wiegand <volker.wiegand@cvw.de>
######               This file is part of "CVW Config"
######               See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"
_name="Datenstrom Yellow CMS"
_slug="yellow"


function usage
{
	rm -rf /tmp/cvw_error
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -i   Install or remove $_name
		    or: $_prog -u   Run update as user apache
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


function yellow_user
{
	local _app=$(cvw_xml -r system/app_root)/$_slug/app
	local _lang=$(cvw_xml -r system/language)
	local _name="$1"
	local _mail="$2"
	local _pass="$3"
	local _info="$4"
	[[ -s /tmp/cvw/error ]] && exit 1

	if [[ -s /tmp/cvw/info ]] ; then
		echo "      User ID .................: $_id"   >>/tmp/cvw/info
		echo "      User Name ...............: $_info" >>/tmp/cvw/info
		echo "      User E-Mail .............: $_mail" >>/tmp/cvw/info
		echo "      User Password ...........: $_pass" >>/tmp/cvw/info
	fi

	cvw_user -r apache -d $_app php yellow.php user "$_mail" "$_pass" "$_id" "${_lang%_*}"
}


function yellow_install
{
	cvw_say -h "Installing $_name"
	cvw_xml -a software/php || cvw_say -f "$_prog: requires php"
	local _root=$(cvw_xml -r system/app_root)/$_slug
	local _uri=$(cvw_xml -r software/$_slug/uri)
	local _sitename=$(cvw_xml -r software/$_slug/sitename)
	local _author=$(cvw_xml -r software/$_slug/author)
	local _email=$(cvw_xml -r software/$_slug/email)
	local _theme=$(cvw_xml -r software/$_slug/theme)
	local _language=$(cvw_xml -r system/language)
	local _timezone=$(cvw_xml -r system/timezone)
	[[ -s /tmp/cvw/error ]] && exit 1
	local _app=$_root/app
	local _conf="$_app/system/config/config.ini"
	local _restart=$(cvw_php -s)
	local _source=/var/local/cvw/yellow
	local _file _id _mail _info _pass _base

	cvw_backup $_slug $_app

	cvw_unpack -i $_slug $_app yellow.php

	cvw_file -e $_conf "/^Sitename:/s#:.*#: $_sitename#" $_restart
	cvw_file -e $_conf "/^Author:/s#:.*#: $_author#" $_restart
	cvw_file -e $_conf "/^Email:/s#:.*#: $_email#" $_restart
	cvw_file -e $_conf "/^Language:/s#:.*#: ${_language%_*}#" $_restart
	cvw_file -e $_conf "/^Timezone:/s#:.*#: $_timezone#" $_restart

	_base=$(awk -e '/^UpdateThemesUrl:/ { print $2 }' $_conf)
	[[ -n $_base ]] || cvw_say -f "missing theme base URL"
	_base="$_base/raw/master/zip"
	cvw_say -s "theme is $_theme"
	mkdir -p $_root/themes/$_theme
	wget -q -P $_root/themes/$_theme $_base/$_theme.zip 2>>/tmp/cvw/error
	cp $_root/themes/$_theme/$_theme.zip $_app/system/themes
	cvw_file -e $_conf "/^Theme:/s#:.*#: $_theme#" $_restart

	tar -c -z -f $_root/yellow.tgz -C $_app content
	if [[ -d $_source/content ]] ; then
		cvw_say -s "updating content"
		rsync -rptv --delete $_source/content/ $_app/content
	fi
	for _base in media system ; do
		if [[ -d $_source/$_base ]] ; then
			cvw_say -s "updating $_base"
			rsync -rptv $_source/$_base/ $_app/$_base
		fi
	done

	if [[ -d $_app/content/default ]] ; then
		cvw_file -e $_conf "/^MultiLanguageMode:/s#:.*#: 1#" $_restart
	else
		cvw_file -e $_conf "/^MultiLanguageMode:/s#:.*#: 0#" $_restart
	fi

	if cvw_xml -t software/$_slug/register ; then
		cvw_file -e $_conf "/^EditLoginRestrictions:/s#:.*#: 0#" $_restart
	else
		cvw_file -e $_conf "/^EditLoginRestrictions:/s#:.*#: 1#" $_restart
	fi

	_base=$(awk -e '/^UpdatePluginsUrl:/ { print $2 }' $_conf)
	[[ -n $_base ]] || cvw_say -f "missing plugin base URL"
	_base="$_base/raw/master/zip"
	cvw_xml -l software/$_slug/plugin | sort -u | while read _id ; do
		cvw_say -s "adding plugin $_id"
		mkdir -p $_root/plugins/$_id
		wget -q -P $_root/plugins/$_id $_base/$_id.zip 2>>/tmp/cvw/error
		cp $_root/plugins/$_id/$_id.zip $_app/system/plugins
	done

	_file="/etc/profile.d/alias_$_slug.sh"
	cat >$_file.tmp_VW <<-EOF
		#
		# shell aliases for $_name
		#

		alias y-a='cd $_app'
		alias y-c='cd $_app/content'
		alias y-m='cd $_app/media'
		alias y-o='cd $_app/system/config'
		alias y-p='cd $_app/system/plugins'
		alias y-s='cd $_app/system'
		alias y-t='cd $_app/system/themes'
		alias y-w='chown -R apache:apache $_app'
	EOF
	cvw_file -v $_file

	if [[ -s /tmp/cvw/info ]] ; then
		echo "    ====== $_name ======" >>/tmp/cvw/info
	fi

	chown -R apache:apache $_app

	cvw_xml -i users/user | sort | while read _id ; do
		_mail=$(cvw_user -e $_id)
		_info=$(cvw_user -g $_id)
		_pass=$(cvw_user -p $_id)
		yellow_user "$_id" "$_mail" "$_pass" "$_info"
	done

	cvw_yellow -u
	rm -f $_app/system/trash/*

	if cvw_xml -a software/nginx ; then
		cvw_nginx -p $_slug
	fi

	if cvw_xml -a software/apache ; then
		cvw_apache -p $_slug
	fi

	cvw_borgclient -d $_app

	cvw_url -a "$_name" $_uri

	cvw_say -o "$_slug"
}


function yellow_update
{
	local _app=$(cvw_xml -r system/app_root)/$_slug/app

	cvw_user -r apache -d $_app php yellow.php update
}


while getopts ":iu" opt ; do
	case $opt in
		i)
			if cvw_xml -a software/$_slug ; then
				yellow_install
			else
				cvw_php -z $_slug
			fi
			exit 0
		;;

		u)
			if cvw_xml -a software/$_slug ; then
				yellow_update
			fi
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

