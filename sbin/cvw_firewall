#!/bin/bash
# vim: set ts=8 tw=0 noet :

#################################################################################
######
###### cvw_firewall - Handle firewalling
######                (internal service functions)
######
###### (c) 2016 Volker Wiegand <volker.wiegand@cvw.de>
######          This file is part of "CVW Config"
######          See LICENSE for copyright information
######
#################################################################################

# Exit on error
set -e -o pipefail

# Remember the args
_prog=${0##*/}
_args="$*"


function usage
{
	cat >/tmp/cvw_error <<-EOF
		Syntax: $_prog -s service   Open up service
		    or: $_prog -t port      Open up TCP port
		    or: $_prog -u port      Open up UDP port
		    or: $_prog -x           Cleanup firewall
		Called with: '$_prog $_args'
	EOF

	if [[ -d /tmp/cvw ]] ; then
		cat /tmp/cvw_error >>/tmp/cvw/error
	else
		cat /tmp/cvw_error >&2
	fi
	rm -f /tmp/cvw_error

	exit 1
}


while getopts ":s:t:u:x" opt ; do
	case $opt in
		s)
			cvw_xml -t host/firewall || exit 0
			cvw_rpm -i firewalld
			echo $OPTARG >>/tmp/cvw/firewall.services
			firewall-cmd -q --permanent --query-service $OPTARG && exit 0
			cvw_say -s "opening service $OPTARG"
			firewall-cmd -q --permanent --add-service=$OPTARG
			firewall-cmd -q --reload
			exit 0
		;;

		t)
			cvw_xml -t host/firewall || exit 0
			cvw_rpm -i firewalld
			echo "$OPTARG/tcp" >>/tmp/cvw/firewall.ports
			firewall-cmd -q --permanent --query-port $OPTARG/tcp && exit 0
			cvw_say -s "opening TCP port $OPTARG"
			firewall-cmd -q --permanent --add-port=$OPTARG/tcp
			firewall-cmd -q --reload
			exit 0
		;;

		u)
			cvw_xml -t host/firewall || exit 0
			cvw_rpm -i firewalld
			echo "$OPTARG/udp" >>/tmp/cvw/firewall.ports
			firewall-cmd -q --permanent --query-port $OPTARG/udp && exit 0
			cvw_say -s "opening UDP port $OPTARG"
			firewall-cmd -q --permanent --add-port=$OPTARG/udp
			firewall-cmd -q --reload
			exit 0
		;;

		x)
			cvw_xml -t host/firewall || exit 0
			cvw_rpm -i firewalld
			cvw_say -h "Updating firewall"
			if [[ -s /tmp/cvw/firewall.ports ]] ; then
				for _port in $(firewall-cmd --permanent --list-ports) ; do
					grep -q "^$_port" /tmp/cvw/firewall.ports && continue
					firewall-cmd -q --permanent --remove-port=$_port
				done
				if cvw_xml -c host/ssh_port ; then
					firewall-cmd -q --permanent --remove-service=ssh
				fi
				firewall-cmd -q --reload
			fi
			cvw_say -s "services ..: $(firewall-cmd --permanent --list-services)"
			cvw_say -s "ports .....: $(firewall-cmd --permanent --list-ports)"
			cvw_say -o "firewall"
			exit 0
		;;

		\?)
			usage
		;;
	esac
done
shift $(($OPTIND-1))

usage

